{"ast":null,"code":"import _asyncToGenerator from \"C:\\\\Unimed\\\\projetos_Wesley\\\\Portal Gest\\xE3o Conhecimento\\\\V_2_0_0\\\\gestao-conhecimento-1\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\asyncToGenerator.js\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../services/subject.service\";\nimport * as i2 from \"../services/api.service\";\nimport * as i3 from \"../queries/auth.query\";\nimport * as i4 from \"../services/data.service\";\nexport class AuthRepository {\n  constructor(subjectService, apiService, authQuery, dataService) {\n    this.subjectService = subjectService;\n    this.apiService = apiService;\n    this.authQuery = authQuery;\n    this.dataService = dataService;\n  }\n\n  Set_Login(params) {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      _this.subjectService.subject_Exibindo_Loading.next(true);\n\n      const query = _this.authQuery.Set_Login();\n\n      const response = yield _this.apiService.Mutation([query], {\n        params\n      }, _this.httpOptions);\n\n      _this.subjectService.subject_Exibindo_Loading.next(false);\n    })();\n  }\n\n  Set_Registrar(params) {\n    var _this2 = this;\n\n    return _asyncToGenerator(function* () {\n      _this2.subjectService.subject_Exibindo_Loading.next(true);\n\n      const query = _this2.authQuery.Set_Registrar();\n\n      yield _this2.apiService.Mutation([query], {\n        params\n      }, _this2.httpOptions);\n\n      _this2.subjectService.subject_Exibindo_Loading.next(false);\n    })();\n  }\n\n  Get_Url_Chat() {\n    var _this3 = this;\n\n    return _asyncToGenerator(function* () {\n      _this3.subjectService.subject_Exibindo_Loading.next(true);\n\n      const query = _this3.authQuery.Get_Url_Chat();\n\n      const response = yield _this3.apiService.Query([query], {\n        cd_Subcontrato: _this3.dataService.Get_Session(\"subcontratos\")[0].cd_Subcontrato\n      }, _this3.httpOptions);\n\n      _this3.subjectService.subject_Exibindo_Loading.next(false); // return response.chat.data\n\n    })();\n  }\n\n}\n\nAuthRepository.ɵfac = function AuthRepository_Factory(t) {\n  return new (t || AuthRepository)(i0.ɵɵinject(i1.SubjectService), i0.ɵɵinject(i2.ApiService), i0.ɵɵinject(i3.AuthQuery), i0.ɵɵinject(i4.DataService));\n};\n\nAuthRepository.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: AuthRepository,\n  factory: AuthRepository.ɵfac,\n  providedIn: \"root\"\n});","map":{"version":3,"sources":["C:/Unimed/projetos_Wesley/Portal Gestão Conhecimento/V_2_0_0/gestao-conhecimento-1/src/app/repositories/auth.repository.ts"],"names":["i0","i1","i2","i3","i4","AuthRepository","constructor","subjectService","apiService","authQuery","dataService","Set_Login","params","subject_Exibindo_Loading","next","query","response","Mutation","httpOptions","Set_Registrar","Get_Url_Chat","Query","cd_Subcontrato","Get_Session","ɵfac","AuthRepository_Factory","t","ɵɵinject","SubjectService","ApiService","AuthQuery","DataService","ɵprov","ɵɵdefineInjectable","token","factory","providedIn"],"mappings":"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","sourcesContent":["import * as i0 from \"@angular/core\";\r\nimport * as i1 from \"../services/subject.service\";\r\nimport * as i2 from \"../services/api.service\";\r\nimport * as i3 from \"../queries/auth.query\";\r\nimport * as i4 from \"../services/data.service\";\r\nexport class AuthRepository {\r\n    constructor(subjectService, apiService, authQuery, dataService) {\r\n        this.subjectService = subjectService;\r\n        this.apiService = apiService;\r\n        this.authQuery = authQuery;\r\n        this.dataService = dataService;\r\n    }\r\n    async Set_Login(params) {\r\n        this.subjectService.subject_Exibindo_Loading.next(true);\r\n        const query = this.authQuery.Set_Login();\r\n        const response = await this.apiService.Mutation([query], { params }, this.httpOptions);\r\n        this.subjectService.subject_Exibindo_Loading.next(false);\r\n    }\r\n    async Set_Registrar(params) {\r\n        this.subjectService.subject_Exibindo_Loading.next(true);\r\n        const query = this.authQuery.Set_Registrar();\r\n        await this.apiService.Mutation([query], { params }, this.httpOptions);\r\n        this.subjectService.subject_Exibindo_Loading.next(false);\r\n    }\r\n    async Get_Url_Chat() {\r\n        this.subjectService.subject_Exibindo_Loading.next(true);\r\n        const query = this.authQuery.Get_Url_Chat();\r\n        const response = await this.apiService.Query([query], { cd_Subcontrato: this.dataService.Get_Session(\"subcontratos\")[0].cd_Subcontrato }, this.httpOptions);\r\n        this.subjectService.subject_Exibindo_Loading.next(false);\r\n        // return response.chat.data\r\n    }\r\n}\r\nAuthRepository.ɵfac = function AuthRepository_Factory(t) { return new (t || AuthRepository)(i0.ɵɵinject(i1.SubjectService), i0.ɵɵinject(i2.ApiService), i0.ɵɵinject(i3.AuthQuery), i0.ɵɵinject(i4.DataService)); };\r\nAuthRepository.ɵprov = /*@__PURE__*/ i0.ɵɵdefineInjectable({ token: AuthRepository, factory: AuthRepository.ɵfac, providedIn: \"root\" });\r\n"]},"metadata":{},"sourceType":"module"}